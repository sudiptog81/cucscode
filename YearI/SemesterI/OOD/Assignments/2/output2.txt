$ java JavaReflector java.lang.String
package java.lang;
public final class String implements java.io.Serializable, java.lang.Comparable, java.lang.CharSequence {
	// Fields
	private final byte[] value;
	private final byte coder;
	private int hash;
	private static final long serialVersionUID;
	static final boolean COMPACT_STRINGS;
	private static final java.io.ObjectStreamField[] serialPersistentFields;
	public static final java.util.Comparator CASE_INSENSITIVE_ORDER;
	static final byte LATIN1;
	static final byte UTF16;

	// Constructors
	public String(byte[] arg0);
	public String(byte[] arg0, int arg1, int arg2);
	public String(byte[] arg0, java.nio.charset.Charset arg1);
	public String(byte[] arg0, String arg1);
	public String(byte[] arg0, int arg1, int arg2, java.nio.charset.Charset arg3);
	String(char[] arg0, int arg1, int arg2, java.lang.Void arg3);
	String(java.lang.AbstractStringBuilder arg0, java.lang.Void arg1);
	public String(java.lang.StringBuilder arg0);
	public String(java.lang.StringBuffer arg0);
	String(byte[] arg0, byte arg1);
	public String(char[] arg0, int arg1, int arg2);
	public String(char[] arg0);
	public String(String arg0);
	public String();
	public String(byte[] arg0, int arg1, int arg2, String arg3);
	public String(byte[] arg0, int arg1);
	public String(byte[] arg0, int arg1, int arg2, int arg3);
	public String(int[] arg0, int arg1, int arg2);

	// Methods
	byte[] value();
	public boolean equals(java.lang.Object arg0);
	public int length();
	public String toString();
	public int hashCode();
	public void getChars(int arg0, int arg1, char[] arg2, int arg3);
	public int compareTo(String arg0);
	public volatile int compareTo(java.lang.Object arg0);
	public int indexOf(String arg0, int arg1);
	public int indexOf(int arg0);
	static int indexOf(byte[] arg0, byte arg1, int arg2, String arg3, int arg4);
	public int indexOf(int arg0, int arg1);
	public int indexOf(String arg0);
	static void checkIndex(int arg0, int arg1);
	public static String valueOf(int arg0);
	public static String valueOf(float arg0);
	public static String valueOf(boolean arg0);
	public static String valueOf(long arg0);
	public static String valueOf(double arg0);
	public static String valueOf(java.lang.Object arg0);
	public static String valueOf(char arg0);
	public static String valueOf(char[] arg0);
	public static String valueOf(char[] arg0, int arg1, int arg2);
	byte coder();
	private static java.lang.Void rangeCheck(char[] arg0, int arg1, int arg2);
	public java.util.stream.IntStream codePoints();
	public boolean isEmpty();
	public char charAt(int arg0);
	public int codePointAt(int arg0);
	public int codePointBefore(int arg0);
	public int codePointCount(int arg0, int arg1);
	public int offsetByCodePoints(int arg0, int arg1);
	public byte[] getBytes(java.nio.charset.Charset arg0);
	public void getBytes(int arg0, int arg1, byte[] arg2, int arg3);
	public byte[] getBytes(String arg0);
	public byte[] getBytes();
	void getBytes(byte[] arg0, int arg1, byte arg2);
	public boolean contentEquals(java.lang.StringBuffer arg0);
	public boolean contentEquals(java.lang.CharSequence arg0);
	private boolean nonSyncContentEquals(java.lang.AbstractStringBuilder arg0);
	public boolean equalsIgnoreCase(String arg0);
	public int compareToIgnoreCase(String arg0);
	public boolean regionMatches(boolean arg0, int arg1, String arg2, int arg3, int arg4);
	public boolean regionMatches(int arg0, String arg1, int arg2, int arg3);
	public boolean startsWith(String arg0);
	public boolean startsWith(String arg0, int arg1);
	public boolean endsWith(String arg0);
	public int lastIndexOf(int arg0);
	static int lastIndexOf(byte[] arg0, byte arg1, int arg2, String arg3, int arg4);
	public int lastIndexOf(String arg0, int arg1);
	public int lastIndexOf(String arg0);
	public int lastIndexOf(int arg0, int arg1);
	public String substring(int arg0, int arg1);
	public String substring(int arg0);
	public java.lang.CharSequence subSequence(int arg0, int arg1);
	public String concat(String arg0);
	public String replace(java.lang.CharSequence arg0, java.lang.CharSequence arg1);
	public String replace(char arg0, char arg1);
	public boolean matches(String arg0);
	public boolean contains(java.lang.CharSequence arg0);
	public String replaceFirst(String arg0, String arg1);
	public String replaceAll(String arg0, String arg1);
	public String[] split(String arg0);
	public String[] split(String arg0, int arg1);
	public static transient String join(java.lang.CharSequence arg0, java.lang.CharSequence[] arg1);
	public static String join(java.lang.CharSequence arg0, java.lang.Iterable arg1);
	public String toLowerCase();
	public String toLowerCase(java.util.Locale arg0);
	public String toUpperCase(java.util.Locale arg0);
	public String toUpperCase();
	public String trim();
	public String strip();
	public String stripLeading();
	public String stripTrailing();
	public boolean isBlank();
	private int indexOfNonWhitespace();
	public java.util.stream.Stream lines();
	public java.util.stream.IntStream chars();
	public char[] toCharArray();
	public static transient String format(String arg0, java.lang.Object[] arg1);
	public static transient String format(java.util.Locale arg0, String arg1, java.lang.Object[] arg2);
	public static String copyValueOf(char[] arg0, int arg1, int arg2);
	public static String copyValueOf(char[] arg0);
	public native String intern();
	public String repeat(int arg0);
	private boolean isLatin1();
	static void checkOffset(int arg0, int arg1);
	static void checkBoundsOffCount(int arg0, int arg1, int arg2);
	static void checkBoundsBeginEnd(int arg0, int arg1, int arg2);
	static String valueOfCodePoint(int arg0);
}
